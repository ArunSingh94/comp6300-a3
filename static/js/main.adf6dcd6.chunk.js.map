{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/form-box/form-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","onClick","e","alert","recipe","analyzedInstructions","steps","map","s","idx","step","alt","src","image","title","readyInMinutes","CardList","recipes","id","FormBox","mySubmitHandler","myChangeHandler","onSubmit","type","name","required","onChange","App","event","nam","target","val","value","setState","preventDefault","fetch","state","searchTerm","maxReadyTime","then","response","json","results","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,iBAAiBC,QAAS,SAAAC,GAC7BC,MAAMJ,EAAMK,OAAOC,qBAAqB,GAAGC,MAAMC,KAAI,SAACC,EAAEC,GACpD,OAAOD,EAAEE,KAAO,YAFhC,UAMI,qBAAKC,IAAI,SAASC,IAAKb,EAAMK,OAAOS,QACpC,sBAAKb,UAAU,WAAf,UACI,6BAAKD,EAAMK,OAAOU,QAClB,+BAAKf,EAAMK,OAAOW,eAAlB,cACA,yDCXCC,EAAW,SAACjB,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEQD,EAAMkB,QAAQV,KAAI,SAAAH,GAAM,OACpB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOc,UCLrBC,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAiBC,EAAnB,EAAmBA,gBAAnB,OACnB,qBAAKrB,UAAU,YAAf,SACI,uBAAMsB,SAAUF,EAAhB,UACI,2CACA,uBACIG,KAAK,OACLC,KAAK,aACLC,UAAQ,EACRC,SAAUL,IAEd,kEACA,uBACIE,KAAK,OACLC,KAAK,eACLC,UAAQ,EACRC,SAAUL,IAEd,uBACIrB,UAAU,eACVuB,KAAK,kBCgCNI,E,kDA/Cb,aAAc,IAAD,8BACX,gBAWFN,gBAAkB,SAACO,GACjB,IAAIC,EAAMD,EAAME,OAAON,KACnBO,EAAMH,EAAME,OAAOE,MACvB,EAAKC,SAAL,eAAgBJ,EAAME,KAfX,EAkBbX,gBAAkB,SAACQ,GACjBA,EAAMM,iBAGNC,MAAM,mGACJ,EAAKC,MAAMC,WAAa,iBAAmB,EAAKD,MAAME,aAAe,wCACtEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtB,GACJ,EAAKgB,SAAS,CAAChB,QAASA,EAAQyB,cAxBlC,EAAKN,MAAQ,CACXnB,QAAQ,GACRoB,WAAY,GACZC,aAAc,MALL,E,qDASb,c,oBAsBA,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CACEoB,gBAAiBuB,KAAKvB,gBACtBC,gBAAiBsB,KAAKtB,kBAExB,cAAC,EAAD,CACEJ,QAAS0B,KAAKP,MAAMnB,iB,GA1CZ2B,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.adf6dcd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    \r\n    <div className='card-container' onClick={e => {\r\n                alert(props.recipe.analyzedInstructions[0].steps.map((s,idx) => {\r\n                    return s.step + '\\r\\n';\r\n                }))\r\n            }\r\n        }>\r\n        <img alt='recipe' src={props.recipe.image}/>\r\n        <div className=\"centered\">\r\n            <h1>{props.recipe.title}</h1>\r\n            <h2>{props.recipe.readyInMinutes} minutes</h2>\r\n            <h3>Click for recipe</h3>\r\n        </div>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {\r\n            props.recipes.map(recipe => (\r\n                <Card key={recipe.id} recipe={recipe}/>\r\n            ))\r\n        }\r\n    </div>\r\n);","import React from 'react';\r\nimport './form-box.styles.css'\r\n\r\nexport const FormBox = ({mySubmitHandler, myChangeHandler}) => (\r\n    <div className='form-list'>\r\n        <form onSubmit={mySubmitHandler}>\r\n            <label>Search</label>\r\n            <input\r\n                type='text'\r\n                name='searchTerm'\r\n                required\r\n                onChange={myChangeHandler}\r\n            />\r\n            <label>Max cooking time (in minutes)</label>\r\n            <input\r\n                type='text'\r\n                name='maxReadyTime'\r\n                required\r\n                onChange={myChangeHandler}\r\n            />\r\n            <input\r\n                className='submitButton'\r\n                type='submit'\r\n            />\r\n        </form>\r\n    </div>\r\n);","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {FormBox} from './components/form-box/form-box.component';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      recipes:[],\n      searchTerm: '',\n      maxReadyTime: null\n    };\n  }\n\n  componentDidMount(){\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n  }\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    //alert(\"You are submitting \" + this.state.searchTerm + \" and \" + this.state.maxReadyTime);\n\n    fetch('https://api.spoonacular.com/recipes/complexSearch?apiKey=fa7102b52b444015b3a0ed9d7acf2cb2&query=' \n    + this.state.searchTerm + '&maxReadyTime=' + this.state.maxReadyTime + '&number=40&addRecipeInformation=true')\n    .then(response => response.json())\n    .then(recipes => {\n      this.setState({recipes: recipes.results})\n      //console.log(this.state.recipes)\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        <h1>Recipe Finder</h1>\n        <FormBox\n          mySubmitHandler={this.mySubmitHandler}\n          myChangeHandler={this.myChangeHandler} \n        />\n        <CardList \n          recipes={this.state.recipes} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}